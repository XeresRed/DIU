/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vista.Drive;

import com.controlador.busqueda;
import com.google.api.services.drive.model.File;
import com.modelo.conversiones.extensionesDocumento;
import com.modelo.conversiones.extensionesHojasCalculo;
import com.modelo.conversiones.extensionesImagenes;
import com.modelo.conversiones.extensionesPresetaciones;
import com.vista.Drive.archivos.Conversion;
import com.vista.Index;
import com.vista.espera.Espera;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.nio.charset.Charset;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Juan Camilo
 */
public class DriveTools extends javax.swing.JPanel {
    Index vista;
    List<File> arcivos;
    com.modelo.conversiones.extensionesDocumento Documeto;
    com.modelo.conversiones.extensionesHojasCalculo Calculo;
    com.modelo.conversiones.extensionesImagenes Imagen;
    com.modelo.conversiones.extensionesPresetaciones Presentacion;
    /**
     * Creates new form DriveTools
     */
    public DriveTools(Index view) {
        vista = view;
        initComponents();
    }
    
    public void recibir_informacion(List<File> descargar ){
        arcivos = descargar;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLBL2 = new javax.swing.JLabel();
        Drive = new javax.swing.JLabel();
        nameLBL3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(53, 92, 125));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setMinimumSize(new java.awt.Dimension(100, 100));
        setPreferredSize(new java.awt.Dimension(290, 425));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nameLBL2.setFont(new java.awt.Font("MS UI Gothic", 0, 24)); // NOI18N
        nameLBL2.setForeground(new java.awt.Color(255, 255, 255));
        nameLBL2.setText("Descargar archivo");
        nameLBL2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                descargarF(evt);
            }
        });
        add(nameLBL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        Drive.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Drive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/metaforas/conducir.png"))); // NOI18N
        Drive.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(Drive, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 110, 90));

        nameLBL3.setFont(new java.awt.Font("MS UI Gothic", 0, 24)); // NOI18N
        nameLBL3.setForeground(new java.awt.Color(255, 255, 255));
        nameLBL3.setText("Subir un archivo");
        add(nameLBL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/metaforas/archivo(1).png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 30, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/metaforas/archivo.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 30, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void descargarF(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descargarF
        // TODO add your handling code here:
        
        JFileChooser saveDialog = new JFileChooser();
      // Demonstrate "Save" dialog:
      int rVal = saveDialog.showSaveDialog(vista);
      if (rVal == JFileChooser.APPROVE_OPTION) {
          
        String filename = saveDialog.getSelectedFile().getName();
        String dir= saveDialog.getCurrentDirectory().toString();
        System.out.println("archivo ruta mas nombre: " + dir +"\\"+filename);
        vista.paso_informacion_drive();
        com.controlador.busqueda b = new busqueda();
        com.vista.Drive.archivos.Conversion c;
        //com.vista.espera.Espera a = new Espera(vista, true);
        //a.setVisible(true);
        for (int i = 0; i < arcivos.size(); i++) {
            
            try {
                if (arcivos.get(i).getDownloadUrl() != null && arcivos.get(i).getDownloadUrl().length() > 0) {
                    InputStream is = b.descargaEx(arcivos.get(i));
                    FileOutputStream fos = new FileOutputStream(dir+"\\"+arcivos.get(i).getTitle());

                            // Lectura de la foto de la web y escritura en fichero local
                    byte[] array = new byte[1000]; // buffer temporal de lectura.
                    int leido = is.read(array);
                    while (leido > 0) {
                            fos.write(array, 0, leido);
                            leido = is.read(array);
                    }

                    is.close();
                    fos.close();
                   // a.dispose();
                }else{
                    byte[]  is = new byte[0];
                    FileOutputStream salida;
                    System.out.println("\niamgen drive:" + arcivos.get(i).getMimeType());
                    switch(arcivos.get(i).getMimeType()){
                        case "application/vnd.google-apps.document":
                            c = new Conversion(vista,true);
                            c.EstableceTipo("documento");
                            c.setVisible(true);
                            String[] dataD = delvolverConverD(c.getPosicion());
                            is = b.descargaNo(arcivos.get(i),dataD[0]);
                            salida = new FileOutputStream(dir+"\\"+filename+dataD[1]);

                            salida.write(is);
                            salida.close();
                            break;
                        case "application/vnd.google-apps.spreadsheet":
                            c = new Conversion(vista,true);
                            c.EstableceTipo("hoja");
                            c.setVisible(true);
                            String[] dataS = delvolverConverS(c.getPosicion());
                            is = b.descargaNo(arcivos.get(i), dataS[0]);
                            salida = new FileOutputStream(dir+"\\"+filename+dataS[1]);

                            salida.write(is);
                            salida.close();
                            break;
                    }
                    //a.dispose();
                    
                }
	} catch (IOException e) {
                System.out.println("A ocurrido un error");
	}
      }
      }

      
    }//GEN-LAST:event_descargarF
    
    private String[] delvolverConverD(int pos) {
        String[] conver;
        Documeto = new extensionesDocumento();
        if (pos== 0){
            conver  = Documeto.docx();
            return conver;
        }else if(pos== 1){
            conver  = Documeto.open();
            return conver;
        }else{
            conver  = Documeto.pdf();
            return conver;
        }
        
    }
    
    private String[] delvolverConverS(int pos) {
        String[] conver;
        Calculo = new extensionesHojasCalculo();
        if (pos== 0){
            conver  = Calculo.docx();
            return conver;
        }else if(pos== 1){
            conver  = Calculo.open();
            return conver;
        }else{
            conver  = Calculo.pdf();
            return conver;
        }
    }
    
    private String[] delvolverConverI(int pos) {
        String[] conver;
        Imagen = new extensionesImagenes();
        if (pos== 0){
            conver  = Imagen.jpg();
            return conver;
        }else if(pos== 1){
            conver  = Imagen.png();
            return conver;
        }else{
            conver  = Imagen.pdf();
            return conver;
        }
    }
    
    private String[] delvolverConverP(int pos) {
        String[] conver;
        Presentacion = new extensionesPresetaciones();
        if (pos== 0){
            conver  = Presentacion.docx();
            return conver;
        }else if(pos== 1){
            conver  = Presentacion.open();
            return conver;
        }else{
            conver  = Presentacion.pdf();
            return conver;
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Drive;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel nameLBL2;
    private javax.swing.JLabel nameLBL3;
    // End of variables declaration//GEN-END:variables


}
