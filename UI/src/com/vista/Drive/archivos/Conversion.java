/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vista.Drive.archivos;

import com.controlador.Control_fuentes;
import com.modelo.extensionesDocumento;
import com.modelo.extensionesHojasCalculo;
import com.modelo.extensionesImagenes;
import com.modelo.extensionesPresetaciones;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JSeparator;

/**
 *
 * @author Juan Camilo
 */
public class Conversion extends javax.swing.JDialog implements MouseListener{
    List<panelConvert> paneles;
    String[] lista;
    String tipo;
    com.modelo.extensionesDocumento Documeto;
    com.modelo.extensionesHojasCalculo Calculo;
    com.modelo.extensionesImagenes Imagen;
    com.modelo.extensionesPresetaciones Presentacion;
    int pos;
    /**
     * Creates new form Conversion
     */
    public Conversion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        paneles = new ArrayList<>();
        lista  = new String[10];
    }
    
    public void EstableceTipo(String tipo){
        this.tipo = tipo;
        switch(tipo){
            case "documento":
                arregloDoc();
                break;
            case "hoja":
                arregloHoja();
                break;
            case "img":
                arregloImg();
                break;
            case "prese":
                arregloPre();
                break;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(254, 244, 232));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("¿Qué formato desea?");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 350, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 408));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Conversion dialog = new Conversion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void arregloDoc() {
        Documeto = new extensionesDocumento();
        lista = Documeto.conversiones();
        String[] listImag = {"/com/metaforas/oficina.png","/com/metaforas/OpenOffice.png","/com/metaforas/pdf.png"};
        int y = 40;
        for (int i = 0; i < lista.length; i++) {
            panelConvert imagen = new panelConvert(listImag[i], lista[i]);
            imagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            imagen.addMouseListener(this);
            jPanel1.add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, y, 468, 111));
            paneles.add(imagen);
            y += 112;  
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void arregloHoja() {
        Calculo = new extensionesHojasCalculo();
        lista = Calculo.conversiones();
        String[] listImag = {"/com/metaforas/oficina.png","/com/metaforas/OpenOffice.png","/com/metaforas/pdf.png"};
        int y = 40;
        for (int i = 0; i < lista.length; i++) {
            panelConvert imagen = new panelConvert(listImag[i], lista[i]);
            imagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            imagen.addMouseListener(this);
            jPanel1.add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, y, 468, 111));
            paneles.add(imagen);
            y += 112;  
        }
    }

    private void arregloImg() {
        Imagen = new extensionesImagenes();
        lista = Imagen.conversiones();
        String[] listImag = {"/com/metaforas/jpg.png","/com/metaforas/png.png","/com/metaforas/pdf.png"};
        int y = 40;
        for (int i = 0; i < lista.length; i++) {
            panelConvert imagen = new panelConvert(listImag[i], lista[i]);
            imagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            imagen.addMouseListener(this);
            jPanel1.add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, y, 468, 111));
            paneles.add(imagen);
            y += 112;  
        }
    }

    private void arregloPre() {
        Presentacion = new extensionesPresetaciones();
        lista = Presentacion.conversiones();
        String[] litImag = {"/com/metaforas/oficina.png","/com/metaforas/OpenOffice.png","/com/metaforas/pdf.png"};
        int y = 40;
        for (int i = 0; i < lista.length; i++) {
            panelConvert imagen = new panelConvert(litImag[i], lista[i]);
            imagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            imagen.addMouseListener(this);
            jPanel1.add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, y, 468, 111));
            paneles.add(imagen);
            y += 112;  
        }
    }
    
    public int getPosicion(){
        return pos;
    }
    
    @Override
    public void mouseClicked(MouseEvent e) {
        for (int i = 0; i < paneles.size(); i++) {
            if(e.getSource() == paneles.get(i)){
                pos = i;
                this.dispose();
            }
        }
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
       
    }

    @Override
    public void mouseReleased(MouseEvent e) {
       
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        for (int i = 0; i < paneles.size(); i++) {
            if(e.getSource() == paneles.get(i)){
                   //jPanel1.remove(i);
                   jPanel1.getComponent(i+1).setBackground(new Color(123,206,204));
                   repaint();
            }
        }
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
        Color blan = new Color(254,244,232);
        for (int i = 0; i < paneles.size(); i++) {
            if(e.getSource() == paneles.get(i)){
                   //jPanel1.remove(i);
                   jPanel1.getComponent(i+1).setBackground(blan);
                   repaint();
            }
        }
    }

    
}
